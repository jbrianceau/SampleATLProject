parameters:
- name: vmImageType
  type: string

- name: configuration
  type: string

- name: platform
  type: string

jobs:
- job: Build_${{ parameters.platform }}_${{ parameters.configuration }}_${{ parameters.vmImageType }}
  displayName: Build ${{ parameters.platform }} / ${{ parameters.configuration }} on ${{ parameters.vmImageType }}
  pool:
    ${{ if eq(parameters.vmImageType, 'vs2017') }}:
      vmImage: vs2017-win2016
    ${{ if eq(parameters.vmImageType, 'vs2019') }}:
      vmImage: windows-2019
  steps:
  - checkout: self
    clean: true

  - powershell: |
      Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
      $InstallPath = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
      $componentsToAdd = @(
        "Microsoft.VisualStudio.Component.VC.v141.ATL.ARM",
        "Microsoft.VisualStudio.Component.VC.v141.ATL.ARM64"
      )
      [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
      $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
      $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
      if ($process.ExitCode -eq 0)
      {
          Write-Host "components have been successfully added"
      }
      else
      {
          Write-Host "components were not installed"
          exit 1
      }

  - task: VSBuild@1
    displayName: Build solution SampleATLProject.sln (${{ parameters.platform }} / ${{ parameters.configuration }} on ${{ parameters.vmImageType }})
    inputs:
      solution: SampleATLProject.sln
      msbuildArgs: /verbosity:normal
      platform: ${{ parameters.platform }}
      configuration: ${{ parameters.configuration }}
      clean: true
      maximumCpuCount: true
      msbuildArchitecture: x64
